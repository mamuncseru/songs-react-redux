{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","onClick","selectSong","title","renderList","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"oLAIMA,E,gKAEF,WAAc,IAAD,OACT,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GACzB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,wBACIA,UAAU,oBACVC,QAAS,kBAAM,EAAKL,MAAMM,WAAWH,IAFzC,sBAQJ,qBAAKC,UAAU,UAAf,SAA0BD,EAAKI,UAVRJ,EAAKI,Y,oBAgB5C,WACI,OACI,qBAAKH,UAAU,kBAAf,SAAkCL,KAAKS,mB,GAvB5BC,aAiCRC,eAJS,SAACC,GACrB,MAAO,CAAEV,MAAOU,EAAMV,SAGc,CAAEK,WCpChB,SAACH,GAEvB,MAAO,CACHS,KAAM,gBACNC,QAASV,KDgCFO,CAAyCZ,GEdzCY,eAJS,SAACC,GACrB,MAAO,CAAER,KAAMQ,EAAMG,gBAGVJ,EApBI,SAAC,GAAc,IAAZP,EAAW,EAAXA,KAClB,OAAKA,EAID,gCACI,+CACA,wCACYA,EAAKI,MACb,uBAFJ,aAGeJ,EAAKY,eARjB,mDCeAC,EAfH,WACR,OACI,qBAAKZ,UAAU,oBAAf,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,oBAAf,SACI,cAAC,EAAD,YCQLa,cAAgB,CAC3BhB,MAnBiB,WACjB,MAAO,CACH,CAAEM,MAAO,wBAAyBQ,SAAU,QAC5C,CAAER,MAAO,eAAgBQ,SAAU,QACnC,CAAER,MAAO,cAAeQ,SAAU,QAClC,CAAER,MAAO,kBAAmBQ,SAAU,UAe1CD,aAVwB,WAAgC,IAA/BA,EAA8B,uDAAjB,KAAMI,EAAW,uCACvD,MAAoB,kBAAhBA,EAAON,KACAM,EAAOL,QAGXC,KCTXK,IAASC,OACL,cAAC,IAAD,CAAUC,MAAOC,YAAYC,GAA7B,SACI,cAAC,EAAD,MAEJC,SAASC,cAAc,Y","file":"static/js/main.f646c5d5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { selectSong } from '../actions';\n\nclass SongList extends Component {\n\n    renderList() {\n        return this.props.songs.map((song) => {\n            return (\n                <div className=\"item\" key={song.title}>\n                    <div className=\"right floated content\">\n                        <button\n                            className=\"ui button primary\"\n                            onClick={() => this.props.selectSong(song)}\n                        >\n                            Select\n                        </button>\n                    </div>\n\n                    <div className=\"content\">{song.title}</div>\n                </div>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"ui divided list\">{this.renderList()}</div>\n        );\n    };\n\n};\n\nconst mapStateToProps = (state) => {\n    return { songs: state.songs };\n}\n\nexport default connect(mapStateToProps, { selectSong })(SongList);","// Action creator\nexport const selectSong = (song) => {\n    // Return an action\n    return {\n        type: 'SONG_SELECTED',\n        payload: song\n    };\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst SongDetail = ({ song }) => {\n    if (!song) {\n        return <div>Select a song</div>\n    }\n    return (\n        <div>\n            <h3>Details for: </h3>\n            <p>\n                Title: {song.title}\n                <br />\n                Duration: {song.duration}\n            </p>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return { song: state.selectedSong }\n};\n\nexport default connect(mapStateToProps)(SongDetail);\n\n","import React from 'react';\nimport SongList from './SongList';\nimport SongDetail from './SongDetail';\n\n\nconst App = () => {\n    return (\n        <div className=\"ui container grid\">\n            <div className=\"ui row\">\n                <div className=\"column eight wide\">\n                    <SongList />\n                </div>\n                <div className=\"column eight wide\">\n                    <SongDetail />\n                </div>\n            </div>\n        </div>\n        );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\n\n// Song list reducer\nconst songsReducer = () => {\n    return [\n        { title: 'Amar moner sokol asha', duration: '4:50' },\n        { title: 'My Best Time', duration: '2:30' },\n        { title: 'Remember Me', duration: '3:15' },\n        { title: 'I am a believer', duration: '4:00' }\n    ];\n};\n\n// Selected Song Reducer\nconst selectedSongReducer = (selectedSong=null, action) => {\n    if (action.type === 'SONG_SELECTED') {\n        return action.payload;\n    }\n\n    return selectedSong;\n};\n\nexport default combineReducers({\n    songs: songsReducer,\n    selectedSong: selectedSongReducer\n});\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n\nReactDOM.render(\n    <Provider store={createStore(reducers)}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}